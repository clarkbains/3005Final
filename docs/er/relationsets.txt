One to one relations total participation is "pulled into" each other.

Billing_info(userid, card_number, ccv, exp_month, exp_day)


User(userid, username, password, email, phone, admin)

Every User has a unique userid
Usernames are unique


User_orders(userid, orderid)

User_Address(userid, addressid)
Address(addressid, country, province, code, street_number, street)

fix author

Every address has a unique addressid
code -> province



Orders(orderid, tracking_number, carrier, date, price)
tracking_number -> carrier
Every order has a unique orderid,


OrderIterms(orderid, isbn, quantity)
orderid, isbn -> quantity

Book(isbn, title, papges, sale_price, purchase_price, coverURL, available, quantity)
isbn->everything


Publisher(publisherid, name, email, phone, addressid, branch_transit, financial_institution, account_number)
publisherid -> everything


Genre(genreid, name)
genreid->name
Author(authorid, name)
authorid->name

Book_genre(isbn, genreid)
Book_author(isbn, authorid)

Book_publisher(isbn, publisherid, royalty)
isbn->all

Publisher_orders(pub_orderid, isbn, publisherid, datem quantity, recieved, price)



CREATE TABLE IF NOT EXISTS
    Billing_info (
        `userid` INTEGER PRIMARY KEY NOT NULL,
        `card_number` INTEGER PRIMARY KEY  NOT NULL,
        `ccv` INTEGER  PRIMARY KEY NOT NULL,
        `exp_month` INTEGER  PRIMARY KEY NOT NULL,
        `exp_year` INTEGER  PRIMARY KEY NOT NULL,
        CONSTRAINT `user_id_fk` FOREIGN KEY (`userid`) REFERENCES User(`userid`) ON DELETE CASCADE);


CREATE TABLE IF NOT EXISTS
    Users (
        `userid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
        `username` TEXT NOT NULL UNIQUE,
        `password` TEXT  PRIMARY KEY NOT NULL,
        `email` TEXT NOT NULL,
        `phone` TEXT NOT NULL,
        `admin` INTEGER NOT NULL DEFAULT (0));

CREATE TABLE IF NOT EXISTS
    User_Orders (
        `userid` INTEGER PRIMARY KEY NOT NULL,
        `orderid` INTEGER PRIMARY KEY NOT NULL,
        CONSTRAINT `user_id_fk` FOREIGN KEY (`userid`) REFERENCES Users(`userid`),
        CONSTRAINT `order_id_fk` FOREIGN KEY (`orderid`) REFERENCES Orders(`orderid`));


CREATE TABLE IF NOT EXISTS
    User_Address (
        `userid` INTEGER PRIMARY KEY NOT NULL,
        `addressid` INTEGER PRIMARY KEY NOT NULL,
        CONSTRAINT `user_id_fk` FOREIGN KEY (`userid`) REFERENCES Users(`userid`),
        CONSTRAINT `address_id_fk` FOREIGN KEY (`addressid`) REFERENCES Address(`addressid`));

CREATE TABLE IF NOT EXISTS
    Address (
        `addressid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
        `country` TEXT NOT NULL
        `province` TEXT NOT NULL
        `postal` TEXT NOT NULL
        `street_number` NOT NULL
        `strret` TEXT  NOT NULL);

CREATE TABLE IF NOT EXISTS
    Orders (
        `orderid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
        `tracking_number` TEXT NOT NULL
        `carrier` TEXT NOT NULL
        `date` INTEGER NOT NULL
        `price` REAL NOT NULL);

CREATE TABLE IF NOT EXISTS
    Order_Items (
        `orderid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
        `isbn` INTEGER PRIMARY KEY NOT NULL,
        `quantity` INTEGER NOT NULL,
        CONSTRAINT `isbn_fk` FOREIGN KEY (`isbn`) REFERENCES Books(`isbn`),
        CONSTRAINT `order_id_fk` FOREIGN KEY (`orderid`) REFERENCES Orders(`orderid`));


CREATE TABLE IF NOT EXISTS
    Books (
        `isbn` INTEGER PRIMARY KEY NOT NULL UNIQUE,
        `title` TEXT  NOT NULL,
        `pages` INTEGER NOT NULL,
        `sale_price` REAL NOT NULL,
        `purchase_price` REAL NOT NULL,
        `cover_url` TEXT,
        `available` INTEGER NOT NULL DEFAULT (1),
        `quantity` INTEGER NOT NULL DEFAULT (0));

CREATE TABLE IF NOT EXISTS
    Publishers (
        `publisherid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
        `title` TEXT  NOT NULL,
        `pages` INTEGER NOT NULL,
        `sale_price` REAL NOT NULL,
        `purchase_price` REAL NOT NULL,
        `cover_url` TEXT,
        `available` INTEGER NOT NULL DEFAULT (1),
        `quantity` INTEGER NOT NULL DEFAULT (0));

CREATE TABLE IF NOT EXISTS
    Genres (
        `genreid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
        `name` TEXT NOT NULL);

CREATE TABLE IF NOT EXISTS
    Authors (
        `authorid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE,
        `name` TEXT NOT NULL);

CREATE TABLE IF NOT EXISTS
    book_authors (
        `authorid` INTEGER PRIMARY KEY NOT NULL,
        `isbn` INTEGER PRIMARY KEY NOT NULL,
        CONSTRAINT `isbn_fk` FOREIGN KEY (`isbn`) REFERENCES Books(`isbn`),
        CONSTRAINT `author_id_fk` FOREIGN KEY (`authorid`) REFERENCES Authors(`authorid`));

CREATE TABLE IF NOT EXISTS
    book_genres (
        `genreid` INTEGER PRIMARY KEY NOT NULL,
        `isbn` INTEGER PRIMARY KEY NOT NULL,
        CONSTRAINT `isbn_fk` FOREIGN KEY (`isbn`) REFERENCES Books(`isbn`),
        CONSTRAINT `genre_id_fk` FOREIGN KEY (`genreid`) REFERENCES Genres(`genreid`));

CREATE TABLE IF NOT EXISTS
    book_publisher (
        `publisherid` INTEGER NOT NULL,
        `isbn` INTEGER PRIMARY KEY NOT NULL,
        `royalty` REAL NOT NULL,
        CONSTRAINT `isbn_fk` FOREIGN KEY (`isbn`) REFERENCES Books(`isbn`),
        CONSTRAINT `publisherid_fk` FOREIGN KEY (`publisherid`) REFERENCES Publishers(`publisherid`));

CREATE TABLE IF NOT EXISTS
    Publisher_Orders (
        `publisher_orderid` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
        `publisherid` INTEGER NOT NULL,
        `isbn` INTEGER NOT NULL,
        `order_date` INTEGER NOT NULL,
        `quantity` INTEGER NOT NULL,
        `recieved` INTEGER NOT NULL DEFAULT (0),
        `price` REAL NOT NULL,

        CONSTRAINT `isbn_fk` FOREIGN KEY (`isbn`) REFERENCES Books(`isbn`),
        CONSTRAINT `publisherid_fk` FOREIGN KEY (`publisherid`) REFERENCES Publishers(`publisherid`));















